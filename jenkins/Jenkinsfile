pipeline {
  agent any
  options { skipDefaultCheckout(true) }
  tools { maven 'Maven3' }
  environment {
    REGISTRY = credentials('docker-registry-creds') // configure in Jenkins
  }
  stages {
    stage('Checkout') {
      steps { checkout scm }
    }
    stage('Backend Build') {
      steps {
        dir('backend') { sh 'mvn -B -DskipTests clean package' }
      }
    }
    stage('Frontend Install') {
      steps {
        dir('frontend') { sh 'npm ci || npm install' }
      }
    }
    stage('Docker Build & Tag') {
      steps {
        script {
          sh 'docker build -t book-website-backend:ci backend'
          sh 'docker build -t book-website-frontend:ci frontend'
        }
      }
    }
    stage('K8s Deploy (kubectl)') {
      when { expression { return fileExists('k8s') } }
      steps {
        sh 'kubectl apply -f k8s/mysql-configmap.yaml || true'
        sh 'kubectl apply -f k8s/mysql-deployment.yaml'
        sh 'kubectl apply -f k8s/backend-deployment.yaml'
        sh 'kubectl apply -f k8s/frontend-deployment.yaml'
        sh 'kubectl apply -f k8s/ingress.yaml'
      }
    }
  }
  post {
    always {
      archiveArtifacts artifacts: '**/*', fingerprint: true
    }
  }
}
